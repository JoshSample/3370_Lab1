<tokens><keyword>class</keyword><symbol>{</symbol><identifier>Square</identifier><keyword>field</keyword><symbol>,</symbol><symbol>;</symbol><keyword>int</keyword><identifier>x</identifier><identifier>y</identifier><keyword>field</keyword><symbol>;</symbol><keyword>int</keyword><identifier>size</identifier><keyword>constructor</keyword><symbol>(</symbol><symbol>,</symbol><symbol>,</symbol><symbol>)</symbol><symbol>{</symbol><keyword>Square</keyword><keyword>newint</keyword><keyword>Ax</keyword><keyword>int</keyword><identifier>Ay</identifier><identifier>Asize</identifier><keyword>let</keyword><symbol>=</symbol><symbol>;</symbol><identifier>x</identifier><identifier>Ax</identifier><keyword>let</keyword><symbol>=</symbol><symbol>;</symbol><identifier>y</identifier><identifier>Ay</identifier><keyword>let</keyword><symbol>=</symbol><symbol>;</symbol><identifier>size</identifier><identifier>Asize</identifier><keyword>do</keyword><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>draw</identifier><keyword>return</keyword><symbol>;</symbol><keyword>this</keyword><symbol>}</symbol><keyword>method</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><keyword>void</keyword><identifier>dispose</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>MemorydeAllocthis</identifier><symbol>;</symbol><keyword>return</keyword><symbol>}</symbol><keyword>method</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><keyword>void</keyword><identifier>draw</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreensetColortrue</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>,</symbol><symbol>,</symbol><symbol>+</symbol><symbol>,</symbol><symbol>+</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreendrawRectanglex</identifier><identifier>y</identifier><identifier>x</identifier><identifier>size</identifier><identifier>y</identifier><identifier>size</identifier><symbol>;</symbol><keyword>return</keyword><symbol>}</symbol><keyword>method</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><keyword>void</keyword><identifier>erase</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreensetColorfalse</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>,</symbol><symbol>,</symbol><symbol>+</symbol><symbol>,</symbol><symbol>+</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreendrawRectanglex</identifier><identifier>y</identifier><identifier>x</identifier><identifier>size</identifier><identifier>y</identifier><identifier>size</identifier><symbol>;</symbol><keyword>return</keyword><symbol>}</symbol><keyword>method</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><keyword>void</keyword><identifier>incSize</identifier><keyword>if</keyword><symbol>(</symbol><symbol>(</symbol><symbol>(</symbol><symbol>+</symbol><symbol>)</symbol><symbol>&lt;</symbol><symbol>)</symbol><symbol>&amp;</symbol><symbol>(</symbol><symbol>(</symbol><symbol>+</symbol><symbol>)</symbol><symbol>&lt;</symbol><symbol>)</symbol><symbol>)</symbol><symbol>{</symbol><identifier>y</identifier><identifier>size</identifier><identifier>x</identifier><identifier>size</identifier><keyword>do</keyword><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>erase</identifier><keyword>let</keyword><symbol>=</symbol><symbol>+</symbol><symbol>;</symbol><identifier>size</identifier><identifier>size</identifier><keyword>do</keyword><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>draw</identifier><symbol>}</symbol><symbol>;</symbol><keyword>return</keyword><symbol>}</symbol><keyword>method</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><keyword>void</keyword><identifier>decSize</identifier><keyword>if</keyword><symbol>(</symbol><symbol>&gt;</symbol><symbol>)</symbol><symbol>{</symbol><identifier>size</identifier><keyword>do</keyword><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>erase</identifier><keyword>let</keyword><symbol>=</symbol><symbol>-</symbol><symbol>;</symbol><identifier>size</identifier><identifier>size</identifier><keyword>do</keyword><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>draw</identifier><symbol>}</symbol><symbol>;</symbol><keyword>return</keyword><symbol>}</symbol><keyword>method</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><keyword>void</keyword><identifier>moveUp</identifier><keyword>if</keyword><symbol>(</symbol><symbol>&gt;</symbol><symbol>)</symbol><symbol>{</symbol><identifier>y</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreensetColorfalse</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>,</symbol><symbol>(</symbol><symbol>+</symbol><symbol>)</symbol><symbol>-</symbol><symbol>,</symbol><symbol>+</symbol><symbol>,</symbol><symbol>+</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreendrawRectanglex</identifier><identifier>y</identifier><identifier>size</identifier><identifier>x</identifier><identifier>size</identifier><identifier>y</identifier><identifier>size</identifier><keyword>let</keyword><symbol>=</symbol><symbol>-</symbol><symbol>;</symbol><identifier>y</identifier><identifier>y</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreensetColortrue</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>,</symbol><symbol>,</symbol><symbol>+</symbol><symbol>,</symbol><symbol>+</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreendrawRectanglex</identifier><identifier>y</identifier><identifier>x</identifier><identifier>size</identifier><identifier>y</identifier><symbol>}</symbol><symbol>;</symbol><keyword>return</keyword><symbol>}</symbol><keyword>method</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><keyword>void</keyword><identifier>moveDown</identifier><keyword>if</keyword><symbol>(</symbol><symbol>(</symbol><symbol>+</symbol><symbol>)</symbol><symbol>&lt;</symbol><symbol>)</symbol><symbol>{</symbol><identifier>y</identifier><identifier>size</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreensetColorfalse</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>,</symbol><symbol>,</symbol><symbol>+</symbol><symbol>,</symbol><symbol>+</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreendrawRectanglex</identifier><identifier>y</identifier><identifier>x</identifier><identifier>size</identifier><identifier>y</identifier><keyword>let</keyword><symbol>=</symbol><symbol>+</symbol><symbol>;</symbol><identifier>y</identifier><identifier>y</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreensetColortrue</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>,</symbol><symbol>(</symbol><symbol>+</symbol><symbol>)</symbol><symbol>-</symbol><symbol>,</symbol><symbol>+</symbol><symbol>,</symbol><symbol>+</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreendrawRectanglex</identifier><identifier>y</identifier><identifier>size</identifier><identifier>x</identifier><identifier>size</identifier><identifier>y</identifier><identifier>size</identifier><symbol>}</symbol><symbol>;</symbol><keyword>return</keyword><symbol>}</symbol><keyword>method</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><keyword>void</keyword><identifier>moveLeft</identifier><keyword>if</keyword><symbol>(</symbol><symbol>&gt;</symbol><symbol>)</symbol><symbol>{</symbol><identifier>x</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreensetColorfalse</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>(</symbol><symbol>+</symbol><symbol>)</symbol><symbol>-</symbol><symbol>,</symbol><symbol>,</symbol><symbol>+</symbol><symbol>,</symbol><symbol>+</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreendrawRectanglex</identifier><identifier>size</identifier><identifier>y</identifier><identifier>x</identifier><identifier>size</identifier><identifier>y</identifier><identifier>size</identifier><keyword>let</keyword><symbol>=</symbol><symbol>-</symbol><symbol>;</symbol><identifier>x</identifier><identifier>x</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreensetColortrue</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>,</symbol><symbol>,</symbol><symbol>+</symbol><symbol>,</symbol><symbol>+</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreendrawRectanglex</identifier><identifier>y</identifier><identifier>x</identifier><identifier>y</identifier><identifier>size</identifier><symbol>}</symbol><symbol>;</symbol><keyword>return</keyword><symbol>}</symbol><keyword>method</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><keyword>void</keyword><identifier>moveRight</identifier><keyword>if</keyword><symbol>(</symbol><symbol>(</symbol><symbol>+</symbol><symbol>)</symbol><symbol>&lt;</symbol><symbol>)</symbol><symbol>{</symbol><identifier>x</identifier><identifier>size</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreensetColorfalse</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>,</symbol><symbol>,</symbol><symbol>+</symbol><symbol>,</symbol><symbol>+</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreendrawRectanglex</identifier><identifier>y</identifier><identifier>x</identifier><identifier>y</identifier><identifier>size</identifier><keyword>let</keyword><symbol>=</symbol><symbol>+</symbol><symbol>;</symbol><identifier>x</identifier><identifier>x</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreensetColortrue</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>(</symbol><symbol>+</symbol><symbol>)</symbol><symbol>-</symbol><symbol>,</symbol><symbol>,</symbol><symbol>+</symbol><symbol>,</symbol><symbol>+</symbol><symbol>)</symbol><symbol>;</symbol><identifier>ScreendrawRectanglex</identifier><identifier>size</identifier><identifier>y</identifier><identifier>x</identifier><identifier>size</identifier><identifier>y</identifier><identifier>size</identifier><symbol>}</symbol><symbol>;</symbol><keyword>return</keyword><symbol>}</symbol><symbol>}</symbol><keyword>class</keyword><symbol>{</symbol><identifier>SquareGame</identifier><keyword>field</keyword><symbol>;</symbol><identifier>Square</identifier><identifier>square</identifier><keyword>field</keyword><symbol>;</symbol><keyword>int</keyword><identifier>direction</identifier><keyword>constructor</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><identifier>SquareGame</identifier><identifier>new</identifier><keyword>let</keyword><symbol>=</symbol><symbol>;</symbol><identifier>square</identifier><identifier>square</identifier><keyword>let</keyword><symbol>=</symbol><symbol>;</symbol><identifier>direction</identifier><identifier>direction</identifier><keyword>return</keyword><symbol>;</symbol><identifier>square</identifier><symbol>}</symbol><keyword>method</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><keyword>void</keyword><identifier>dispose</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>squaredispose</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>MemorydeAllocsquare</identifier><symbol>;</symbol><keyword>return</keyword><symbol>}</symbol><keyword>method</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><keyword>void</keyword><identifier>run</identifier><keyword>var</keyword><symbol>;</symbol><keyword>char</keyword><identifier>key</identifier><keyword>var</keyword><symbol>;</symbol><keyword>boolean</keyword><identifier>exit</identifier><keyword>let</keyword><symbol>=</symbol><symbol>;</symbol><identifier>exit</identifier><identifier>key</identifier><keyword>while</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><identifier>exit</identifier><keyword>while</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><identifier>key</identifier><keyword>let</keyword><symbol>=</symbol><symbol>;</symbol><identifier>key</identifier><identifier>key</identifier><keyword>do</keyword><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>moveSquare</identifier><symbol>}</symbol><keyword>if</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><identifier>key</identifier><keyword>let</keyword><symbol>=</symbol><symbol>;</symbol><identifier>exit</identifier><identifier>exit</identifier><symbol>}</symbol><keyword>if</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><identifier>key</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>squaredecSize</identifier><symbol>}</symbol><keyword>if</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><identifier>key</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>squareincSize</identifier><symbol>}</symbol><keyword>if</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><identifier>key</identifier><keyword>let</keyword><symbol>=</symbol><symbol>;</symbol><identifier>direction</identifier><identifier>exit</identifier><symbol>}</symbol><keyword>if</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><identifier>key</identifier><keyword>let</keyword><symbol>=</symbol><symbol>;</symbol><identifier>direction</identifier><identifier>key</identifier><symbol>}</symbol><keyword>if</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><identifier>key</identifier><keyword>let</keyword><symbol>=</symbol><symbol>;</symbol><identifier>direction</identifier><identifier>square</identifier><symbol>}</symbol><keyword>if</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><identifier>key</identifier><keyword>let</keyword><symbol>=</symbol><symbol>;</symbol><identifier>direction</identifier><identifier>direction</identifier><symbol>}</symbol><keyword>while</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><identifier>key</identifier><keyword>let</keyword><symbol>=</symbol><symbol>;</symbol><identifier>key</identifier><identifier>key</identifier><keyword>do</keyword><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>moveSquare</identifier><symbol>}</symbol><symbol>}</symbol><symbol>;</symbol><keyword>return</keyword><symbol>}</symbol><keyword>method</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><keyword>void</keyword><identifier>moveSquare</identifier><keyword>if</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><identifier>direction</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>squaremoveUp</identifier><symbol>}</symbol><keyword>if</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><identifier>direction</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>squaremoveDown</identifier><symbol>}</symbol><keyword>if</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><identifier>direction</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>squaremoveLeft</identifier><symbol>}</symbol><keyword>if</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><identifier>direction</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>squaremoveRight</identifier><symbol>}</symbol><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>Syswaitdirection</identifier><symbol>;</symbol><keyword>return</keyword><symbol>}</symbol><symbol>}</symbol><keyword>class</keyword><symbol>{</symbol><identifier>Main</identifier><keyword>function</keyword><symbol>(</symbol><symbol>)</symbol><symbol>{</symbol><keyword>void</keyword><identifier>main</identifier><keyword>var</keyword><symbol>;</symbol><identifier>SquareGame</identifier><identifier>game</identifier><keyword>let</keyword><symbol>=</symbol><symbol>;</symbol><identifier>game</identifier><identifier>game</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>gamerun</identifier><keyword>do</keyword><symbol>.</symbol><symbol>(</symbol><symbol>)</symbol><symbol>;</symbol><identifier>gamedispose</identifier><symbol>;</symbol><keyword>return</keyword><symbol>}</symbol><symbol>}</symbol></tokens>